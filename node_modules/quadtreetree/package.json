{
  "name": "quadtreetree",
  "version": "0.5.0",
  "description": "Draws a D3 quadtree's internal tree to a layout tree.",
  "main": "quadtreetree.js",
  "directories": {
    "example": "example"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/jimkang/quadtreetree.git"
  },
  "keywords": [
    "d3",
    "quadtree",
    "tree",
    "browser"
  ],
  "author": {
    "name": "Jim Kang"
  },
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/jimkang/quadtreetree/issues"
  },
  "homepage": "https://github.com/jimkang/quadtreetree",
  "dependencies": {
    "one-at": "~0.1.1",
    "quadtreenodereport": "0.1.1",
    "lodash": "2.4.1",
    "quadtreelabeler": "~0.3.2"
  },
  "readme": "quadtreetree\n============\n\nThis is a browser module that renders a D3 [quadtree](https://github.com/mbostock/d3/wiki/Quadtree-Geom)'s nodes in a [tree layout](https://github.com/mbostock/d3/wiki/Tree-Layout).\n\nRequirements\n------------\n\nIt depends on D3 and [Underscore](http://underscorejs.org/) or [Lo-Dash](http://lodash.com/).\n\nInstallation\n------------\n\n    npm install quadtreetree\n\nUsage\n-----\n\nHTML:\n\n    <svg id=\"quadtreetree\" width=\"98%\" height=\"75%\">\n      <g id=\"treeroot\"></g>\n    </svg>\n\n\nJavaScript:\n\n    var quadtreetree = createQuadtreetree({\n      rootSelector: '#treeroot',\n      vertical: true\n    });\n\n    // Call this whenever the quadtree is updated and you want to update\n    // quadtreetree's rendering of it.\n    quadtreetree.update(quadtree);\n\nEvents\n------\n\nquadtreetree dispatches a couple of events if you want to listen for them.\n\n**quadtreetree-nodeSelected**\n\nThis event is dispatched when the user selects a node. The event's `detail` object will be the selected [tree layout](https://github.com/mbostock/d3/wiki/Tree-Layout) node (not the [quadtree](https://github.com/mbostock/d3/wiki/Quadtree-Geom) node). However, it will contain the _quadtree_ node in a property called `sourceNode`. Example:\n\n    document.addEventListener('quadtreetree-nodeSelected', logSelectedNode);\n\n    function logSelectedNode(e) {\n      console.log(e.detail.sourceNode);\n    }\n\n**quadtreetree-dotsEntered**\n\nThis event is dispatched when new nodes are rendered as dots in the tree layout. The event's `detail` object will be a D3 [selection](https://github.com/mbostock/d3/wiki/Selections) of the newly added layout tree nodes.\n\nExample\n-------\n\nSee `example/index.html`. [There's a live version of it here.](http://jimkang.com/quadtreetree/example/)\n\nLicense\n-------\n\nMIT.\n",
  "readmeFilename": "README.md",
  "_id": "quadtreetree@0.5.0",
  "dist": {
    "shasum": "4a46291c77903de061ecbaf3193f804bb78631f1"
  },
  "_from": "quadtreetree@0.5.0",
  "_resolved": "http://registry.npmjs.org/quadtreetree/-/quadtreetree-0.5.0.tgz"
}
